#
# COPYRIGHT Ericsson 2024
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

spring:
  lifecycle:
    timeout-per-shutdown-phase: 10s
  profiles.active: dev
  main.banner-mode: "off"
  application:
    name: '@project.name@'

  datasource:
    hikari:
      leak-detection-threshold: ${DB_POOL_LEAK_DETECTION_THRESHOLD:0}

  servlet.multipart:
    max-request-size: 10MB
    max-file-size: 10MB

  flyway:
    baseline-on-migrate: true

  cloud:
    discovery:
      client:
        composite-indicator:
          enabled: false
    kubernetes:
      discovery:
        enabled: false
      config:
        enabled: true
        enableApi: true
      secrets:
        enableApi: true
        sources:
          - name: ${HELM_CHART_REGISTRY_SECRET_NAME}
      reload:
        enabled: true
        strategy: refresh
        monitoring-secrets: true
        monitoring-config-maps: false

# Removing for now so that the authorization header for the call to the docker registry is not replaced.
#  sleuth:
#    propagation-keys: "Authorization"

info:
  app:
    name: '@project.name@'
    version: '@project.version@'
    description: This service onboards product artifacts in preparation for instantiation

server:
  port: 8888
  socket: localhost
  shutdown: graceful

vnf.packages.root: ${java.io.tmpdir}

chart:
  sub.dir: /Definitions/OtherTemplates
  file.ext: tgz

docker:
  sub.dir: /Files/images
  file.ext: tar
  local.address: "https://192.168.99.100"
  default.port: 2376
  registry:
    address:
    user:
      name:
      password:

keystore:
  password: harbor
  location: ${project.basedir}/target/onboarding.keystore
  cert: ${project.basedir}/target/ca.crt

helm:
  registry:
    scheme: http
    port: 8080
    repo: onboarded
    postWaitTimeoutSeconds: 60

management:
  tracing:
    propagation:
      consume: [b3, w3c]
      produce: [b3, w3c]
    baggage:
      remote-fields:
        - Authorization
    sampling:
      probability: 1.0
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    shutdown:
      enabled: true
    env:
      enabled: true
    heapdump:
      enabled: false
    threaddump:
      enabled: false
    health:
      show-details: "ALWAYS"
      diskspace:
        enabled: true
        path: /tmp
        threshold: 100MB
      probes:
        enabled: true
      group:
        readiness:
          include: ping, diskSpace, pvcCheck, db
        liveness:
          include: ping, diskSpace
    prometheus:
      enabled: true
    metrics:
      enabled: true
    refresh:
      enabled: true
  metrics:
    distribution:
      sla:
        http:
          server:
            requests: 100ms,300ms,500ms
  prometheus:
    metrics:
      export:
        enabled: true

healthCheckEnv:
  mountPaths:
    readOnly: /run/secrets/cacerts
    readWrite:  /obs, /tmp, /var/lib/ca-certificates


idempotency:
  requestDetailsExpirationSeconds: 300
  fixedDelay: 5000
  retryAfter:
    - endpoint: \/api\/vnfpkgm\/v1\/vnf_packages\/?
      method: POST
      latency: 5
    - endpoint: \/api\/vnfpkgm\/v1\/vnf_packages\/[^\/]+
      method: DELETE
      latency: 5

onboarding:
  highAvailabilityMode: ${OBJECT_STORAGE_ENABLED:false}
  timeout: 120
  root_ca_path: "/run/secrets/ca/root"
  restrictedMode: true
  skipToscaoValidation: false
  ignoreCrlInfo: false
  skipCertificateKeyUsageValidation: false
  allowUnsignedVNFPackageOnboarding: true
  skipCertificateValidation: false
  trustedCertificatesFileName: onboarding-trusted-certificate
  logConcurrentRequests: false
  upload:
    concurrency: high
  cleanup:
    cleanupIntervalSeconds: 30
    deleteIntervalSeconds: 5
  sleepTime: 5
  pagination:
    disabledByDefault: true

logging:
  config: "classpath:logback/logback-${LOG_STREAMINGMETHOD:indirect}.xml"
  pattern:
    level: "%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]"
  skip-null-token-endpoints:
    - /actuator/health/liveness
    - /actuator/health/readiness
    - /actuator/prometheus
  endpoints:
    exclude: /actuator/health, /actuator/prometheus

container:
  registry:
    enabled: true

toscao:
  host: localhost
  port: 7001
  api:
    version: v2.7

license:
  host: http://eric-eo-lm-consumer:80

objectStorage:
  host: ${OBJECT_STORAGE_HOST:eric-data-object-storage-mn}
  port: ${OBJECT_STORAGE_PORT:9000}
  retry:
    maxAttempts: 30
  transfer:
    parallelism: 5
  bucket: cvnfm-onboarding
  secure: ${OBJECT_STORAGE_SECURE:false}
  certFilePath: ${OBJECT_STORAGE_TLS_CA_CERT:/run/secrets/ca/root/cacertbundle.pem}
  keyStore:
    password: changeit
  credentials:
    accessKey: ${OBJECT_STORAGE_ACCESSKEY:accessKey}
    secretKey: ${OBJECT_STORAGE_SECRETKEY:secretKey}

heartbeat:
  podName: eric-am-onboarding-server
  intervalSeconds: 10

monitoring:
  intervalSeconds: 40

skopeo:
  enabled: ${SKOPEO_ENABLED:false}

BASIC_AUTH_PASS:
BASIC_AUTH_USER:
url: