{
  "serviceModelID": "1b4657e9-5c3e-49ed-a5ac-8052fcfeed65",
  "typeDefinitions": {
    "data_types": [
      {
        "name": "tosca.datatypes.network.PortDef",
        "derived_from": "integer",
        "description": "The PortDef type is a TOSCA data Type used to define a network port.",
        "constraints": [
          {
            "operator": "in_range",
            "value": [
              1,
              65535
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.xml",
        "derived_from": "string",
        "description": "The xml type is a TOSCA data Type used to define a string that containst data in the Extensible Markup Language (XML) format."
      },
      {
        "name": "tosca.datatypes.Root",
        "description": "This is the default (root) TOSCA Root Type definition that all complex TOSCA Data Types derive from."
      },
      {
        "name": "tosca.datatypes.network.PortSpec",
        "derived_from": "tosca.datatypes.Root",
        "description": "The PortSpec type is a complex TOSCA data Type used when describing port specifications for a network connection.",
        "properties": [
          {
            "name": "target",
            "required": false,
            "type": "tosca.datatypes.network.PortDef",
            "description": "The optional target port."
          },
          {
            "name": "source",
            "required": false,
            "type": "tosca.datatypes.network.PortDef",
            "description": "The optional source port."
          },
          {
            "name": "protocol",
            "default": "tcp",
            "required": true,
            "type": "string",
            "description": "The required protocol used on the port.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "udp",
                  "tcp",
                  "igmp"
                ]
              }
            ]
          },
          {
            "name": "source_range",
            "required": false,
            "type": "range",
            "description": "The optional range for source port.",
            "constraints": [
              {
                "operator": "in_range",
                "value": [
                  1,
                  65535
                ]
              }
            ]
          },
          {
            "name": "target_range",
            "required": false,
            "type": "range",
            "description": "The optional range for target port.",
            "constraints": [
              {
                "operator": "in_range",
                "value": [
                  1,
                  65535
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.Credential",
        "derived_from": "tosca.datatypes.Root",
        "description": "The Credential type is a complex TOSCA data Type used when describing authorization credentials used to access network accessible resources.",
        "properties": [
          {
            "name": "token_type",
            "default": "password",
            "type": "string",
            "description": "The required token type."
          },
          {
            "name": "keys",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "map",
            "description": "The optional list of protocol-specific keys or assertions."
          },
          {
            "name": "token",
            "type": "string",
            "description": "The required token used as a credential for authorization or access to a networked resource."
          },
          {
            "name": "protocol",
            "required": false,
            "type": "string",
            "description": "The optional protocol name."
          },
          {
            "name": "user",
            "required": false,
            "type": "string",
            "description": "The optional user (name or ID) used for non-token based credentials."
          }
        ]
      },
      {
        "name": "tosca.datatypes.network.NetworkInfo",
        "derived_from": "tosca.datatypes.Root",
        "description": "The Network type is a complex TOSCA data type used to describe logical network information.",
        "properties": [
          {
            "name": "network_id",
            "required": false,
            "type": "string",
            "description": "The unique ID of for the network generated by the network provider."
          },
          {
            "name": "network_name",
            "required": false,
            "type": "string",
            "description": "The name of the logical network. e.g., \"public\", \"private\", \"admin\". etc."
          },
          {
            "name": "addresses",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "list",
            "description": "The list of IP addresses assigned from the underlying network."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.L2AddressData",
        "derived_from": "tosca.datatypes.Root",
        "description": "Describes the information on the MAC addresses to be assigned to a connection point.",
        "properties": [
          {
            "name": "mac_address_assignment",
            "required": true,
            "type": "boolean",
            "description": "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.Qos",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes QoS data for a given VL used in a VNF deployment flavour",
        "properties": [
          {
            "name": "latency",
            "required": true,
            "type": "scalar-unit.time",
            "description": "Specifies the maximum latency",
            "constraints": [
              {
                "operator": "greater_than",
                "value": "0 s"
              }
            ]
          },
          {
            "name": "packet_delay_variation",
            "required": true,
            "type": "scalar-unit.time",
            "description": "Specifies the maximum jitter",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": "0 s"
              }
            ]
          },
          {
            "name": "packet_loss_ratio",
            "required": false,
            "type": "float",
            "description": "Specifies the maximum packet loss ratio",
            "constraints": [
              {
                "operator": "in_range",
                "value": [
                  0.0,
                  1.0
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfProfile",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes a profile for instantiating VNFs of a particular NS DF according to a specific VNFD and VNF DF.",
        "properties": [
          {
            "name": "max_number_of_instances",
            "required": true,
            "type": "integer",
            "description": "Maximum number of instances of the VNF based on this VNFD that is permitted to exist for this VnfProfile.",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": 0
              }
            ]
          },
          {
            "name": "service_availability_level",
            "required": false,
            "type": "integer",
            "description": "Specifies the service availability level for the VNF instance created from this profile.",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": 1
              }
            ]
          },
          {
            "name": "min_number_of_instances",
            "required": true,
            "type": "integer",
            "description": "Minimum number of instances of the VNF based on this VNFD that is permitted to exist for this VnfProfile.",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": 0
              }
            ]
          },
          {
            "name": "instantiation_level",
            "required": false,
            "type": "string",
            "description": "Identifier of the instantiation level of the VNF DF to be used for instantiation. If not present, the default instantiation level as declared in the VNFD shall be used."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.ConnectivityType",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes additional connectivity information of a virtualLink",
        "properties": [
          {
            "name": "layer_protocols",
            "entry_schema": {
              "type": "string",
              "constraints": [
                {
                  "valid_values": [
                    "ethernet",
                    "mpls",
                    "odu2",
                    "ipv4",
                    "ipv6",
                    "pseudo-wire"
                  ]
                }
              ]
            },
            "required": true,
            "type": "list",
            "description": "Identifies the protocol a virtualLink gives access to (ethernet, mpls, odu2, ipv4, ipv6, pseudo-wire).The top layer protocol of the virtualLink protocol stack shall always be provided. The lower layer protocols may be included when there are specific requirements on these layers."
          },
          {
            "name": "flow_pattern",
            "required": false,
            "type": "string",
            "description": "Identifies the flow pattern of the connectivity",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "line",
                  "tree",
                  "mesh"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.CpProtocolData",
        "derived_from": "tosca.datatypes.Root",
        "description": "Describes and associates the protocol layer that a CP uses together with other protocol and connection point information",
        "properties": [
          {
            "name": "address_data",
            "entry_schema": {
              "type": "tosca.datatypes.nfv.AddressData"
            },
            "required": false,
            "type": "list",
            "description": "Provides information on the addresses to be assigned to the CP"
          },
          {
            "name": "associated_layer_protocol",
            "required": true,
            "type": "string",
            "description": "One of the values of the property layer_protocols of the CP",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "ethernet",
                  "mpls",
                  "odu2",
                  "ipv4",
                  "ipv6",
                  "pseudo-wire"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.AddressData",
        "derived_from": "tosca.datatypes.Root",
        "description": "Describes information about the addressing scheme and parameters applicable to a CP",
        "properties": [
          {
            "name": "address_type",
            "required": true,
            "type": "string",
            "description": "Describes the type of the address to be assigned to a connection point. The content type shall be aligned with the address type supported by the layerProtocol property of the connection point",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "mac_address",
                  "ip_address"
                ]
              }
            ]
          },
          {
            "name": "l2_address_data",
            "required": false,
            "type": "tosca.datatypes.nfv.L2AddressData",
            "description": "Provides the information on the MAC addresses to be assigned to a connection point."
          },
          {
            "name": "l3_address_data",
            "required": false,
            "type": "tosca.datatypes.nfv.L3AddressData",
            "description": "Provides the information on the IP addresses to be assigned to a connection point"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.LinkBitrateRequirements",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes the requirements in terms of bitrate for a virtual link",
        "properties": [
          {
            "name": "root",
            "required": true,
            "type": "integer",
            "description": "Specifies the throughput requirement in bits per second of the link (e.g. bitrate of E-Line, root bitrate of E-Tree, aggregate capacity of E-LAN).",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": 0
              }
            ]
          },
          {
            "name": "leaf",
            "required": false,
            "type": "integer",
            "description": "Specifies the throughput requirement in bits per second of leaf connections to the link when applicable to the connectivity type (e.g. for E-Tree and E LAN branches).",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": 0
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.L3AddressData",
        "derived_from": "tosca.datatypes.Root",
        "description": "Provides information about Layer 3 level addressing scheme and parameters applicable to a CP",
        "properties": [
          {
            "name": "ip_address_type",
            "required": false,
            "type": "string",
            "description": "Defines address type. The address type should be aligned with the address type supported by the layer_protocols properties of the connetion point",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "ipv4",
                  "ipv6"
                ]
              }
            ]
          },
          {
            "name": "floating_ip_activated",
            "required": true,
            "type": "boolean",
            "description": "Specifies if the floating IP scheme is activated on the Connection Point or not"
          },
          {
            "name": "number_of_ip_address",
            "required": false,
            "type": "integer",
            "description": "Minimum number of IP addresses to be assigned",
            "constraints": [
              {
                "operator": "greater_than",
                "value": 0
              }
            ]
          },
          {
            "name": "ip_address_assignment",
            "required": true,
            "type": "boolean",
            "description": "Specifies if the address assignment is the responsibility of management and orchestration function or not. If it is set to True, it is the management and orchestration function responsibility"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfMonitoringParameter",
        "derived_from": "tosca.datatypes.Root",
        "description": "Represents information on virtualised resource related performance metrics applicable to the VNF.",
        "properties": [
          {
            "name": "collection_period",
            "required": false,
            "type": "scalar-unit.time",
            "description": "Describes the periodicity at which to collect the performance information.",
            "constraints": [
              {
                "operator": "greater_than",
                "value": "0 s"
              }
            ]
          },
          {
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Human readable name of the monitoring parameter"
          },
          {
            "name": "performance_metric",
            "required": true,
            "type": "string",
            "description": "Identifies a performance metric to be monitored, according to ETSI GS NFV-IFA 027.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "v_cpu_usage_mean_vnf",
                  "v_cpu_usage_peak_vnf",
                  "v_memory_usage_mean_vnf",
                  "v_memory_usage_peak_vnf",
                  "v_disk_usage_mean_vnf",
                  "v_disk_usage_peak_vnf",
                  "byte_incoming_vnf_ext_cp",
                  "byte_outgoing_vnf_ext_cp",
                  "packet_incoming_vnf_ext_cp",
                  "packet_outgoing_vnf_ext_cp"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfCreateSnapshotOperationConfiguration",
        "derived_from": "tosca.datatypes.Root",
        "description": "represents information that affect the invocation of the CreateVnfSnapshot operation"
      },
      {
        "name": "tosca.datatypes.nfv.VnfPackageChangeSelector",
        "derived_from": "tosca.datatypes.Root",
        "description": "data type describes the source and destination VNFDs as well as source deployment flavour for a change current VNF Package.",
        "properties": [
          {
            "name": "destination_descriptor_id",
            "required": true,
            "type": "string",
            "description": "Identifier of the destination VNFD and the destination VNF package."
          },
          {
            "name": "source_flavour_id",
            "required": true,
            "type": "string",
            "description": "Identifier of the deployment flavour in the source VNF package for which this data type applies."
          },
          {
            "name": "source_descriptor_id",
            "required": true,
            "type": "string",
            "description": "Identifier of the source VNFD and the source VNF package."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VirtualLinkProtocolData",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes one protocol layer and associated protocol data for a given virtual link used in a specific VNF deployment flavour",
        "properties": [
          {
            "name": "l3_protocol_data",
            "required": false,
            "type": "tosca.datatypes.nfv.L3ProtocolData",
            "description": "Specifies the L3 protocol data for this virtual link.  Shall be present when the associatedLayerProtocol attribute indicates a L3 protocol and shall be absent otherwise."
          },
          {
            "name": "l2_protocol_data",
            "required": false,
            "type": "tosca.datatypes.nfv.L2ProtocolData",
            "description": "Specifies the L2 protocol data for a virtual link. Shall be present when the associatedLayerProtocol attribute indicates a L2 protocol and shall be absent otherwise."
          },
          {
            "name": "associated_layer_protocol",
            "required": true,
            "type": "string",
            "description": "Identifies one of the protocols a virtualLink gives access to (ethernet, mpls, odu2, ipv4, ipv6, pseudo-wire) as specified by the connectivity_type property.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "ethernet",
                  "mpls",
                  "odu2",
                  "ipv4",
                  "ipv6",
                  "pseudo-wire"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfInfoModifiableAttributesMetadata",
        "derived_from": "tosca.datatypes.Root",
        "description": "is an empty base type for deriving data types for describing VNF-specific metadata"
      },
      {
        "name": "tosca.datatypes.nfv.VnfChangeCurrentPackageOperationConfiguration",
        "derived_from": "tosca.datatypes.Root",
        "description": "represents information that affect the invocation of the change current VNF Package operation."
      },
      {
        "name": "tosca.datatypes.nfv.LogicalNodeData",
        "derived_from": "tosca.datatypes.Root",
        "description": "Describes compute, memory and I/O requirements associated with a particular VDU.",
        "properties": [
          {
            "name": "logical_node_requirements",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "map",
            "description": "The logical node-level compute, memory and I/O requirements. A map  of strings that contains a set of key-value pairs that describes hardware platform specific deployment requirements, including the number of CPU cores on this logical node, a memory configuration specific to a logical node  or a requirement related to the association of an I/O device with the logical node."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.UriAuthority",
        "derived_from": "tosca.datatypes.Root",
        "description": "information that corresponds to the authority component of a URI as specified in IETF RFC 3986 [8]",
        "properties": [
          {
            "name": "user_info",
            "required": false,
            "type": "string",
            "description": "user_info field of the authority component of a URI"
          },
          {
            "name": "host",
            "required": false,
            "type": "string",
            "description": "host field of the authority component of a URI"
          },
          {
            "name": "port",
            "required": false,
            "type": "string",
            "description": "port field of the authority component of a URI"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VirtualBlockStorageData",
        "derived_from": "tosca.datatypes.Root",
        "description": "VirtualBlockStorageData describes block storage requirements associated with compute resources in a particular VDU, either as a local disk or as virtual attached storage",
        "properties": [
          {
            "name": "size_of_storage",
            "required": true,
            "type": "scalar-unit.size",
            "description": "Size of virtualised storage resource",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": "0 B"
              }
            ]
          },
          {
            "name": "vdu_storage_requirements",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "map",
            "description": "The hardware platform specific storage requirements. A map of strings that contains a set of key-value pairs that represents the hardware platform specific storage deployment requirements"
          },
          {
            "name": "rdma_enabled",
            "default": false,
            "required": true,
            "type": "boolean",
            "description": "Indicates if the storage support RDMA"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.ScalingAspect",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes the details of an aspect used for horizontal scaling",
        "properties": [
          {
            "name": "max_scale_level",
            "required": true,
            "type": "integer",
            "description": "Total number of scaling steps that can be applied w.r.t. this aspect. The value of this property corresponds to the number of scaling steps can be applied to this aspect when scaling it from the minimum scale level (i.e. 0) to the maximum scale level defined by this property",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": 0
              }
            ]
          },
          {
            "name": "description",
            "required": true,
            "type": "string",
            "description": "Human readable description of the aspect"
          },
          {
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Human readable name of the aspect"
          },
          {
            "name": "step_deltas",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "list",
            "description": "List of scaling deltas to be applied for the different subsequent scaling steps of this aspect. The first entry in the array shall correspond to the first scaling step (between scale levels 0 to 1) and the last entry in the array shall correspond to the last scaling step (between maxScaleLevel-1 and maxScaleLevel)"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VirtualMemory",
        "derived_from": "tosca.datatypes.Root",
        "description": "supports the specification of requirements related to virtual memory of a virtual compute resource",
        "properties": [
          {
            "name": "vdu_mem_requirements",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "map",
            "description": "The hardware platform specific VDU memory requirements. A map of strings that contains a set of key-value pairs that describes hardware platform specific VDU memory requirements."
          },
          {
            "name": "virtual_mem_oversubscription_policy",
            "required": false,
            "type": "string",
            "description": "The memory core oversubscription policy in terms of virtual memory to physical memory on the platform."
          },
          {
            "name": "numa_enabled",
            "default": false,
            "required": true,
            "type": "boolean",
            "description": "It specifies the memory allocation to be cognisant of the relevant process/core allocation."
          },
          {
            "name": "virtual_mem_size",
            "required": true,
            "type": "scalar-unit.size",
            "description": "Amount of virtual memory."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfRevertToSnapshotOperationConfiguration",
        "derived_from": "tosca.datatypes.Root",
        "description": "represents information that affect the invocation of the RevertToVnfSnapshot operation"
      },
      {
        "name": "tosca.datatypes.nfv.BootDataVimSpecificProperties",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes the VIM specific information used for selecting VIM specific capabilities when setting the boot data.",
        "properties": [
          {
            "name": "vim_type",
            "required": true,
            "type": "string",
            "description": "Discriminator for the different types of the VIM information."
          },
          {
            "name": "properties",
            "entry_schema": {
              "type": "string"
            },
            "required": true,
            "type": "map",
            "description": "Properties used for selecting VIM specific capabilities when setting the boot data"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.InterfaceDetails",
        "derived_from": "tosca.datatypes.Root",
        "description": "information used to access an interface exposed by a VNF",
        "properties": [
          {
            "name": "interface_specific_data",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "map",
            "description": "Provides additional details that are specific to the type of interface considered."
          },
          {
            "name": "uri_components",
            "required": false,
            "type": "tosca.datatypes.nfv.UriComponents",
            "description": "Provides components to build a Uniform Ressource Identifier (URI) where to access the interface end point."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfConfigurableProperties",
        "derived_from": "tosca.datatypes.Root",
        "description": "indicates configuration properties for a given VNF (e.g. related to auto scaling and auto healing).",
        "properties": [
          {
            "name": "is_autoheal_enabled",
            "required": false,
            "type": "boolean",
            "description": "It permits to enable (TRUE)/disable (FALSE) the auto-healing functionality. If the property is not present, then configuring this VNF property is not supported"
          },
          {
            "name": "is_autoscale_enabled",
            "required": false,
            "type": "boolean",
            "description": "It permits to enable (TRUE)/disable (FALSE) the auto-scaling functionality. If the property is not present, then configuring this VNF property is not supported"
          },
          {
            "name": "vnfm_oauth_server_info",
            "required": false,
            "type": "tosca.datatypes.nfv.OauthServerInfo",
            "description": "Contains information to enable discovery of the authorization server protecting access to VNFM interfaces. If the property is not present, then configuring this VNF property is not supported."
          },
          {
            "name": "vnfm_interface_info",
            "required": false,
            "type": "tosca.datatypes.nfv.VnfmInterfaceInfo",
            "description": "Contains information enabling access to the NFV-MANO interfaces produced by the VNFM (e.g. URIs and credentials), If the property is not present, then configuring this VNF property is not supported."
          },
          {
            "name": "vnf_oauth_server_info",
            "required": false,
            "type": "tosca.datatypes.nfv.OauthServerInfo",
            "description": "Contains information to enable discovery of the authorization server to validate the access tokens provided by the VNFM when  the VNFM accesses the VNF interfaces, if that functionality (token introspection) is supported by the authorization server. If the property is not present, then configuring this VNF property is not supported."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfcAdditionalConfigurableProperties",
        "derived_from": "tosca.datatypes.Root",
        "description": "VnfcAdditionalConfigurableProperties type is an empty base type for deriving data types for describing additional configurable properties for a given VNFC."
      },
      {
        "name": "tosca.datatypes.nfv.VnfAdditionalConfigurableProperties",
        "derived_from": "tosca.datatypes.Root",
        "description": "is an empty base type for deriving data types for describing additional configurable properties for a given VNF",
        "properties": [
          {
            "name": "is_writable_anytime",
            "default": true,
            "required": true,
            "type": "boolean",
            "description": "It specifies whether these additional configurable properties are writeable (TRUE) at any time (i.e. prior to / at instantiation time as well as after instantiation).or (FALSE) only prior to / at instantiation time. If this property is not present, the additional configurable properties are writable anytime."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.SwImageData",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes information  related to a software image artifact",
        "properties": [
          {
            "name": "operating_system",
            "required": false,
            "type": "string",
            "description": "Identifies the operating system used in the software image"
          },
          {
            "name": "supported_virtualisation_environments",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "list",
            "description": "Identifies the virtualisation environments (e.g. hypervisor) compatible with this software image"
          },
          {
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Name of this software image"
          },
          {
            "name": "container_format",
            "required": true,
            "type": "string",
            "description": "The container format describes the container file format in which software image is provided",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "aki",
                  "ami",
                  "ari",
                  "bare",
                  "docker",
                  "ova",
                  "ovf"
                ]
              }
            ]
          },
          {
            "name": "min_ram",
            "required": false,
            "type": "scalar-unit.size",
            "description": "The minimal RAM requirement for this software image",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": "0 B"
              }
            ]
          },
          {
            "name": "disk_format",
            "required": true,
            "type": "string",
            "description": "The disk format of a software image is the format of the underlying disk image",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "aki",
                  "ami",
                  "ari",
                  "iso",
                  "qcow2",
                  "raw",
                  "vdi",
                  "vhd",
                  "vhdx",
                  "vmdk"
                ]
              }
            ]
          },
          {
            "name": "version",
            "required": true,
            "type": "string",
            "description": "Version of this software image"
          },
          {
            "name": "provider",
            "required": false,
            "type": "string",
            "description": "Provider of this software image"
          },
          {
            "name": "min_disk",
            "required": true,
            "type": "scalar-unit.size",
            "description": "The minimal disk size requirement for this software image",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": "0 B"
              }
            ]
          },
          {
            "name": "checksum",
            "required": true,
            "type": "tosca.datatypes.nfv.ChecksumData",
            "description": "Checksum of the software image file"
          },
          {
            "name": "size",
            "required": true,
            "type": "scalar-unit.size",
            "description": "The size of this software image"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfLcmOperationsConfiguration",
        "derived_from": "tosca.datatypes.Root",
        "description": "Represents information to configure lifecycle management operations",
        "properties": [
          {
            "name": "scale",
            "required": false,
            "type": "tosca.datatypes.nfv.VnfScaleOperationConfiguration",
            "description": "Configuration parameters for the ScaleVnf operation"
          },
          {
            "name": "heal",
            "required": false,
            "type": "tosca.datatypes.nfv.VnfHealOperationConfiguration",
            "description": "Configuration parameters for the HealVnf operation"
          },
          {
            "name": "instantiate",
            "required": false,
            "type": "tosca.datatypes.nfv.VnfInstantiateOperationConfiguration",
            "description": "Configuration parameters for the InstantiateVnf operation"
          },
          {
            "name": "terminate",
            "required": false,
            "type": "tosca.datatypes.nfv.VnfTerminateOperationConfiguration",
            "description": "Configuration parameters for the TerminateVnf operation"
          },
          {
            "name": "change_flavour",
            "required": false,
            "type": "tosca.datatypes.nfv.VnfChangeFlavourOperationConfiguration",
            "description": "Configuration parameters for the changeVnfFlavourOpConfig operation"
          },
          {
            "name": "change_current_package",
            "required": false,
            "type": "tosca.datatypes.nfv.VnfChangeCurrentPackageOperationConfiguration",
            "description": "Configuration parameters for the ChangeCurrentVnfPackage operation"
          },
          {
            "name": "revert_to_snapshot",
            "required": false,
            "type": "tosca.datatypes.nfv.VnfRevertToSnapshotOperationConfiguration",
            "description": "Configuration parameters for the RevertToVnfSnapshot operation"
          },
          {
            "name": "create_snapshot",
            "required": false,
            "type": "tosca.datatypes.nfv.VnfCreateSnapshotOperationConfiguration",
            "description": "Configuration parameters for the CreateVnfSnapshot operation"
          },
          {
            "name": "change_ext_connectivity",
            "required": false,
            "type": "tosca.datatypes.nfv.VnfChangeExtConnectivityOperationConfiguration",
            "description": "Configuration parameters for the changeExtVnfConnectivityOpConfig operation"
          },
          {
            "name": "scale_to_level",
            "required": false,
            "type": "tosca.datatypes.nfv.VnfScaleToLevelOperationConfiguration",
            "description": "Configuration parameters for the ScaleVnfToLevel operation"
          },
          {
            "name": "operate",
            "required": false,
            "type": "tosca.datatypes.nfv.VnfOperateOperationConfiguration",
            "description": "Configuration parameters for the OperateVnf operation"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfOperationAdditionalParameters",
        "derived_from": "tosca.datatypes.Root",
        "description": "Is an empty base type for deriving data type for describing VNF-specific parameters to be passed when invoking lifecycle management operations"
      },
      {
        "name": "ericsson.datatypes.nfv.InstantiateVnfOperationAdditionalParameters",
        "derived_from": "tosca.datatypes.nfv.VnfOperationAdditionalParameters",
        "properties": [
          {
            "name": "ossTopology.networkElementUsername",
            "default": "my-user",
            "required": true,
            "type": "string",
            "description": "Username to access the the VNF."
          },
          {
            "name": "day0.configuration.secrets",
            "entry_schema": {
              "type": "map"
            },
            "required": false,
            "type": "map",
            "description": "map of secrets to be created during instantiation"
          },
          {
            "name": "ossTopology.managedElementId",
            "default": "my-node",
            "required": true,
            "type": "string",
            "description": "The name the VNF will have in ENM"
          },
          {
            "name": "tags.pm",
            "default": true,
            "required": true,
            "type": "boolean",
            "description": "pm tag"
          },
          {
            "name": "ossTopology.snmpPort",
            "required": false,
            "type": "string",
            "description": "SNMP port. Not applicable for AXE based nodes. If port is not provided, then the default port 161 will be set."
          },
          {
            "name": "eric-adp-gs-testapp.ingress.enabled",
            "default": false,
            "required": true,
            "type": "boolean",
            "description": "tags"
          },
          {
            "name": "config.nbi.file.enabled",
            "default": false,
            "required": false,
            "type": "boolean",
            "description": "Enabled creation of file configmap",
            "metadata": {
              "chart_param": "config.nbi.file.enabled"
            }
          },
          {
            "name": "ossTopology.nodeIpAddress",
            "default": "10.210.174.58",
            "required": true,
            "type": "string",
            "description": "The O&M IP Address of the Network Element. Not applicable for AXE compact nodes."
          },
          {
            "name": "influxdb.ext.apiAccessHostname",
            "default": "influxdb-service2.rontgen010.seli.gic.ericsson.se",
            "required": true,
            "type": "string",
            "description": "tags"
          },
          {
            "name": "ossTopology.netConfPort",
            "required": true,
            "type": "string",
            "description": "NetConf port number.Not applicable for AXE based nodes."
          },
          {
            "name": "eric-pm-server.server.ingress.enabled",
            "default": false,
            "required": true,
            "type": "boolean",
            "description": "tags"
          },
          {
            "name": "config.nbi.file.xml.configMap",
            "required": false,
            "type": "file",
            "description": "File parameter to add data for xml to configmap",
            "metadata": {
              "chart_param": "config.nbi.file.xml.configMap"
            }
          },
          {
            "name": "eric-adp-gs-testapp.service.replicaCount",
            "default": 1,
            "required": false,
            "type": "integer",
            "description": "integer value for schema.json validation"
          },
          {
            "name": "ossTopology.networkElementVersion",
            "required": false,
            "type": "string",
            "description": "The Version of the Network Element. Becomes mandatory depending on the \"networkElementType\"."
          },
          {
            "name": "values.yaml",
            "required": false,
            "type": "string",
            "description": "This property can contain the contents of a values.yaml file in escaped json format"
          },
          {
            "name": "ossTopology.communityString",
            "required": true,
            "type": "string",
            "description": "Community string for SNMP. If not provided,default string \"enm-public\" would be taken. Not applicable for AXE based nodes."
          },
          {
            "name": "ossTopology.snmpAuthProtocol",
            "default": "MD5",
            "required": false,
            "type": "string",
            "description": "Authentication protocol used to authorize the identity of user. Not applicable for AXE based nodes.Applicable if SNMP V3 is used and the security level is either AUTH_NO_PRIV or AUTH_PRIV",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "SHA1",
                  "MD5"
                ]
              }
            ]
          },
          {
            "name": "ossTopology.axeNodeInterfaceBIp",
            "required": false,
            "type": "string",
            "description": "Mandatory for AXE-based nodes. IP address for the active side B of the Network Element."
          },
          {
            "name": "ossTopology.networkElementType",
            "default": "UDM-AUSF",
            "required": true,
            "type": "string",
            "description": "The Network element type."
          },
          {
            "name": "ossTopology.disableLdapUser",
            "required": false,
            "type": "boolean",
            "description": "Whether to enable or disable node remote authentication with ENM COM-AA. If the parameter is not provided, the default is enable."
          },
          {
            "name": "pm-testapp.ingress.domain",
            "default": "rontgen010.seli.gic.ericsson.se",
            "required": true,
            "type": "string",
            "description": "pm ingress"
          },
          {
            "name": "ossTopology.snmpAuthPassword",
            "required": true,
            "type": "string",
            "description": "Applicable only for ENM when SNMP V3 is used and the security level is AUTH_NO_PRIV or AUTH_PRIV. Password set for authentication with the provided Authentication Protocol for secure authorization."
          },
          {
            "name": "ossTopology.networkElementPassword",
            "default": "my-password",
            "required": true,
            "type": "string",
            "description": "Password to access the the VNF."
          },
          {
            "name": "ossTopology.pmFunction",
            "default": false,
            "required": false,
            "type": "boolean",
            "description": "PmFunction is used to switch on and off PMIC Mediation flows for each Network Element. If PmFunction is on, all file collection, subscription activation, subscription deactivation, scanner polling and scanner master functionality is available for the Network Element. Default value is false.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  true,
                  false
                ]
              }
            ]
          },
          {
            "name": "ossTopology.ossServerHostname",
            "required": true,
            "type": "string",
            "description": "hostname for scripting cluster VM in ENM."
          },
          {
            "name": "tags.all",
            "default": false,
            "required": true,
            "type": "boolean",
            "description": "tags"
          },
          {
            "name": "ossTopology.fmAlarmSupervision",
            "default": true,
            "required": false,
            "type": "boolean",
            "description": "FmAlarmSupervision is used to enable or disable alarms in case of any failures. Default value is true.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  true,
                  false
                ]
              }
            ]
          },
          {
            "name": "ossTopology.snmpPrivacyPassword",
            "required": true,
            "type": "string",
            "description": "Applicable only for ENM when SNMP V3 is used and the security level is AUTH_NO_PRIV or AUTH_PRIV. Password set for authentication with the provided Authentication Protocol for secure authorization."
          },
          {
            "name": "ossTopology.snmpSecurityName",
            "required": false,
            "type": "string",
            "description": "applicable in case of SNMP V3"
          },
          {
            "name": "ossTopology.snmpSecurityLevel",
            "required": false,
            "type": "string",
            "description": "applicable in case of SNMP V3",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "AUTH_PRIV",
                  "AUTH_NO_PRIV",
                  "NO_AUTH_NO_PRIV"
                ]
              }
            ]
          },
          {
            "name": "ossTopology.snmpVersion",
            "required": false,
            "type": "string",
            "description": "SNMP Version. Not applicable for AXE based nodes. In ENM for SNMP V3, it is mandatory to provide as \"SNMP_V3\"."
          },
          {
            "name": "config.nbi.file.json.configMap",
            "required": false,
            "type": "file",
            "description": "File parameter to add data for json to configmap",
            "metadata": {
              "chart_param": "config.nbi.file.json.configMap"
            }
          },
          {
            "name": "ossTopology.timeZone",
            "required": false,
            "type": "string",
            "description": "Applicable only for AXE based nodes in ENM. If timeZone is not provided, then the timeZone of the system will be set."
          },
          {
            "name": "eric-pm-server.server.persistentVolume.storageClass",
            "default": "network-block",
            "required": false,
            "type": "string",
            "description": "db"
          },
          {
            "name": "ossTopology.sshPortNo",
            "required": false,
            "type": "string",
            "description": "SSH Port Number. If not provided, default should be used."
          },
          {
            "name": "config.nbi.file.script.configMap",
            "required": false,
            "type": "file",
            "description": "File parameter to add data for script to configmap",
            "metadata": {
              "chart_param": "config.nbi.file.script.configMap"
            }
          },
          {
            "name": "ossTopology.sftpPort",
            "required": false,
            "type": "string",
            "description": "SFTP port.  If port is not provided, then the default port 22 will be set."
          },
          {
            "name": "ossTopology.isManagerIpAddress",
            "required": false,
            "type": "string",
            "description": "Mandatory for IS-based AXE nodes. IP address for the SIS interface manager."
          },
          {
            "name": "ossTopology.snmpPrivProtocol",
            "default": "AES128",
            "required": false,
            "type": "string",
            "description": "Authentication protocol used to authorize the identity of user. Not applicable for AXE based nodes.Applicable if SNMP V3 is used and the security level is either AUTH_NO_PRIV or AUTH_PRIV",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "AES128",
                  "DES"
                ]
              }
            ]
          },
          {
            "name": "ossTopology.axeNodeClusterIP",
            "required": false,
            "type": "string",
            "description": "Mandatory for AXE-based nodes. The Cluster IP Address of the Network Element."
          },
          {
            "name": "ossTopology.transportProtocol",
            "default": "SSH",
            "required": false,
            "type": "string",
            "description": "If transportProtocol is not provided, then the default value SSH will be set",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "SSH",
                  "TLS"
                ]
              }
            ]
          },
          {
            "name": "ossTopology.cmNodeHeartbeatSupervision",
            "default": true,
            "required": false,
            "type": "boolean",
            "description": "Used only in case of ENM. Enabling CM Supervision will copy the current status of the configuration data of the node into ENM and enable CM Notifications. Enabling CM Notifications ensures that the node will notify ENM of any configuration data changes. Default value is true.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  true,
                  false
                ]
              }
            ]
          },
          {
            "name": "ossTopology.subNetworks",
            "required": false,
            "type": "string",
            "description": "SubNetwork is used for logical grouping of nodes within ENM."
          },
          {
            "name": "ossTopology.ftpPortNo",
            "required": false,
            "type": "string",
            "description": "FTP Port Number. If not provided, default should be used."
          },
          {
            "name": "ossTopology.axeNodeInterfaceAIp",
            "required": false,
            "type": "string",
            "description": "Mandatory for AXE-based nodes. IP address for the active side A of the Network Element."
          }
        ]
      },
      {
        "name": "ericsson.datatypes.nfv.VnfChangeToVersion1AdditionalParameters",
        "derived_from": "tosca.datatypes.nfv.VnfOperationAdditionalParameters",
        "properties": [
          {
            "name": "data_conversion_identifier",
            "default": "rollback-operation-from-spider-c-tosca-to-spider-b-tosca",
            "required": false,
            "type": "string"
          }
        ]
      },
      {
        "name": "ericsson.datatypes.nfv.ChangePackageVnfOperationAdditionalParameters",
        "derived_from": "tosca.datatypes.nfv.VnfOperationAdditionalParameters",
        "properties": [
          {
            "name": "pm-testapp.ingress.domain",
            "default": "todd041.seli.gic.ericsson.se",
            "required": true,
            "type": "string",
            "description": "pm ingress"
          },
          {
            "name": "eric-pm-server.server.ingress.enabled",
            "default": false,
            "required": true,
            "type": "boolean",
            "description": "tags"
          },
          {
            "name": "tags.all",
            "default": false,
            "required": true,
            "type": "boolean",
            "description": "tags"
          },
          {
            "name": "eric-adp-gs-testapp.ingress.enabled",
            "default": false,
            "required": true,
            "type": "boolean",
            "description": "tags"
          },
          {
            "name": "upgrade.downsize.a.llowed",
            "default": true,
            "required": false,
            "type": "boolean",
            "description": "Indicates that the CNF/CNA is upgraded by setting all replicas to zero before upgrading to resources."
          },
          {
            "name": "config.nbi.file.enabled",
            "default": false,
            "required": false,
            "type": "boolean",
            "description": "Enabled creation of file configmap",
            "metadata": {
              "chart_param": "config.nbi.file.enabled"
            }
          },
          {
            "name": "config.nbi.file.json.configMap",
            "required": false,
            "type": "file",
            "description": "File parameter to add data for json to configmap",
            "metadata": {
              "chart_param": "config.nbi.file.json.configMap"
            }
          },
          {
            "name": "tags.pm",
            "default": true,
            "required": true,
            "type": "boolean",
            "description": "pm tag"
          },
          {
            "name": "influxdb.ext.apiAccessHostname",
            "default": "influxdb-service2.todd041.seli.gic.ericsson.se",
            "required": true,
            "type": "string",
            "description": "tags"
          },
          {
            "name": "eric-pm-server.server.persistentVolume.storageClass",
            "default": "network-block",
            "required": false,
            "type": "string",
            "description": "db"
          },
          {
            "name": "config.nbi.file.script.configMap",
            "required": false,
            "type": "file",
            "description": "File parameter to add data for script to configmap",
            "metadata": {
              "chart_param": "config.nbi.file.script.configMap"
            }
          },
          {
            "name": "config.nbi.file.xml.configMap",
            "required": false,
            "type": "file",
            "description": "File parameter to add data for xml to configmap",
            "metadata": {
              "chart_param": "config.nbi.file.xml.configMap"
            }
          },
          {
            "name": "eric-adp-gs-testapp.service.replicaCount",
            "default": 1,
            "required": false,
            "type": "integer",
            "description": "integer value for schema.json validation"
          },
          {
            "name": "mapType",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "map",
            "description": "map of strings with default values not required"
          },
          {
            "name": "values.yaml",
            "required": false,
            "type": "string",
            "description": "This property can contain the contents of a values.yaml file in escaped json format"
          },
          {
            "name": "listType",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "list",
            "description": "list of strings with default values not required"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VirtualNetworkInterfaceRequirements",
        "derived_from": "tosca.datatypes.Root",
        "description": "Describes requirements on a virtual network interface",
        "properties": [
          {
            "name": "description",
            "required": false,
            "type": "string",
            "description": "Provides a human readable description of the requirement."
          },
          {
            "name": "network_interface_requirements",
            "entry_schema": {
              "type": "string"
            },
            "required": true,
            "type": "map",
            "description": "The network interface requirements. A map of strings that contain a set of key-value pairs that describes the hardware platform specific  network interface deployment requirements."
          },
          {
            "name": "support_mandatory",
            "required": true,
            "type": "boolean",
            "description": "Indicates whether fulfilling the constraint is mandatory (TRUE) for successful operation or desirable (FALSE)."
          },
          {
            "name": "name",
            "required": false,
            "type": "string",
            "description": "Provides a human readable name for the requirement."
          },
          {
            "name": "nic_io_requirements",
            "required": false,
            "type": "tosca.datatypes.nfv.LogicalNodeData",
            "description": "references (couples) the CP with any logical node I/O requirements (for network devices) that may have been created. Linking these attributes is necessary so that so that I/O requirements that need to be articulated at the logical node level can be associated with the network interface requirements associated with the CP."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VirtualFileStorageData",
        "derived_from": "tosca.datatypes.Root",
        "description": "VirtualFileStorageData describes file storage requirements associated with compute resources in a particular VDU",
        "properties": [
          {
            "name": "size_of_storage",
            "required": true,
            "type": "scalar-unit.size",
            "description": "Size of virtualized storage resource",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": "0 B"
              }
            ]
          },
          {
            "name": "file_system_protocol",
            "required": true,
            "type": "string",
            "description": "The shared file system protocol (e.g. NFS, CIFS)"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfScaleOperationConfiguration",
        "derived_from": "tosca.datatypes.Root",
        "description": "Represents information that affect the invocation of the ScaleVnf operation",
        "properties": [
          {
            "name": "scaling_by_more_than_one_step_supported",
            "default": false,
            "required": true,
            "type": "boolean",
            "description": "Signals whether passing a value larger than one in the numScalingSteps parameter of the ScaleVnf operation is supported by this VNF."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VlProfile",
        "derived_from": "tosca.datatypes.Root",
        "description": "Describes additional instantiation data for a given VL used in a specific VNF deployment flavour.",
        "properties": [
          {
            "name": "qos",
            "required": false,
            "type": "tosca.datatypes.nfv.Qos",
            "description": "Specifies the QoS requirements of a VL instantiated according to this profile."
          },
          {
            "name": "virtual_link_protocol_data",
            "entry_schema": {
              "type": "tosca.datatypes.nfv.VirtualLinkProtocolData"
            },
            "required": false,
            "type": "list",
            "description": "Specifies the protocol data for a virtual link."
          },
          {
            "name": "min_bitrate_requirements",
            "required": true,
            "type": "tosca.datatypes.nfv.LinkBitrateRequirements",
            "description": "Specifies the minimum bitrate requirements for a VL instantiated according to this profile."
          },
          {
            "name": "max_bitrate_requirements",
            "required": true,
            "type": "tosca.datatypes.nfv.LinkBitrateRequirements",
            "description": "Specifies the maximum bitrate requirements for a VL instantiated according to this profile."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VirtualObjectStorageData",
        "derived_from": "tosca.datatypes.Root",
        "description": "VirtualObjectStorageData describes object storage requirements associated with compute resources in a particular VDU",
        "properties": [
          {
            "name": "max_size_of_storage",
            "required": false,
            "type": "scalar-unit.size",
            "description": "Maximum size of virtualized  storage resource",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": "0 B"
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.BootData",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes the information used to customize a virtualised compute resource at boot time.",
        "properties": [
          {
            "name": "kvp_data",
            "required": false,
            "type": "tosca.datatypes.nfv.KvpData",
            "description": "A set of key-value pairs for configuring a virtual compute resource."
          },
          {
            "name": "content_or_file_data",
            "required": false,
            "type": "tosca.datatypes.nfv.ContentOrFileData",
            "description": "A string content or a file for configuring a virtual compute resource."
          },
          {
            "name": "vim_specific_properties",
            "required": false,
            "type": "tosca.datatypes.nfv.BootDataVimSpecificProperties",
            "description": "Properties used for selecting VIM specific capabilities when setting the boot data."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.L3ProtocolData",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes L3 protocol data for a given virtual link used in a specific VNF deployment flavour.",
        "properties": [
          {
            "name": "gateway_ip",
            "required": false,
            "type": "string",
            "description": "Specifies the gateway IP address for this L3 protocol. The value may be overridden at run-time."
          },
          {
            "name": "name",
            "required": false,
            "type": "string",
            "description": "Identifies the network name associated with this L3 protocol."
          },
          {
            "name": "ip_version",
            "required": true,
            "type": "string",
            "description": "Specifies IP version of this L3 protocol. The value of the ip_version property shall be consistent with the value of the layer_protocol in the connectivity_type property of the virtual link node.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "ipv4",
                  "ipv6"
                ]
              }
            ]
          },
          {
            "name": "ipv6_address_mode",
            "required": false,
            "type": "string",
            "description": "Specifies IPv6 address mode. May be present when the value of the ipVersion attribute is \"ipv6\" and shall be absent otherwise. The value may be overridden at run-time.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "slaac",
                  "dhcpv6-stateful",
                  "dhcpv6-stateless"
                ]
              }
            ]
          },
          {
            "name": "cidr",
            "required": true,
            "type": "string",
            "description": "Specifies the CIDR (Classless Inter-Domain Routing) of this L3 protocol. The value may be overridden at run-time."
          },
          {
            "name": "ip_allocation_pools",
            "entry_schema": {
              "type": "tosca.datatypes.nfv.IpAllocationPool"
            },
            "required": false,
            "type": "list",
            "description": "Specifies the allocation pools with start and end IP addresses for this L3 protocol. The value may be overridden at run-time."
          },
          {
            "name": "dhcp_enabled",
            "required": false,
            "type": "boolean",
            "description": "Indicates whether DHCP (Dynamic Host Configuration Protocol) is enabled or disabled for this L3 protocol. The value may be overridden at run-time."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VduLevel",
        "derived_from": "tosca.datatypes.Root",
        "description": "Indicates for a given Vdu.Compute in a given level the number of instances to deploy",
        "properties": [
          {
            "name": "number_of_instances",
            "required": true,
            "type": "integer",
            "description": "Number of instances of VNFC based on this VDU to deploy for this level.",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": 0
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfOperateOperationConfiguration",
        "derived_from": "tosca.datatypes.Root",
        "description": "represents information that affect the invocation of the OperateVnf operation",
        "properties": [
          {
            "name": "min_graceful_stop_timeout",
            "required": true,
            "type": "scalar-unit.time",
            "description": "Minimum timeout value for graceful stop of a VNF instance"
          },
          {
            "name": "max_recommended_graceful_stop_timeout",
            "required": false,
            "type": "scalar-unit.time",
            "description": "Maximum recommended timeout value that can be needed to gracefully stop a VNF instance of a particular type under certain conditions, such as maximum load condition. This is provided by VNF provider as information for the operator facilitating the selection of optimal timeout value. This value is not used as constraint"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.ChecksumData",
        "derived_from": "tosca.datatypes.Root",
        "description": "Describes information about the result of performing a checksum operation over some arbitrary data",
        "properties": [
          {
            "name": "hash",
            "required": true,
            "type": "string",
            "description": "Contains the result of applying the algorithm indicated by the algorithm property to the data to which this ChecksumData refers"
          },
          {
            "name": "algorithm",
            "required": true,
            "type": "string",
            "description": "Describes the algorithm used to obtain the checksum value",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "sha-224",
                  "sha-256",
                  "sha-384",
                  "sha-512"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfHealOperationConfiguration",
        "derived_from": "tosca.datatypes.Root",
        "description": "represents information that affect the invocation of the HealVnf operation",
        "properties": [
          {
            "name": "causes",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "list",
            "description": "Supported \"cause\" parameter values"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.InstantiationLevel",
        "derived_from": "tosca.datatypes.Root",
        "description": "Describes the scale level for each aspect that corresponds to a given level of resources to be instantiated within a deployment flavour in term of the number VNFC instances",
        "properties": [
          {
            "name": "scale_info",
            "entry_schema": {
              "type": "tosca.datatypes.nfv.ScaleInfo"
            },
            "required": false,
            "type": "map",
            "description": "Represents for each aspect the scale level that corresponds to this instantiation level. scale_info shall be present if the VNF supports scaling."
          },
          {
            "name": "description",
            "required": true,
            "type": "string",
            "description": "Human readable description of the level"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfInfoModifiableAttributesExtensions",
        "derived_from": "tosca.datatypes.Root",
        "description": "is an empty base type for deriving data types for describing VNF-specific extension"
      },
      {
        "name": "tosca.datatypes.nfv.ContentOrFileData",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes a string content or a file information used to customize a virtualised compute resource at boot time by using string content or file.",
        "properties": [
          {
            "name": "content",
            "required": false,
            "type": "string",
            "description": "The string information used to customize a virtualised compute resource at boot time."
          },
          {
            "name": "data",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "map",
            "description": "A map of strings that contains a set of key-value pairs that carries the dynamic deployment values which used to replace the corresponding variable parts in the file as identify by a URL as described in source_path. Shall be present if \"source_path\" is present and shall be absent otherwise.."
          },
          {
            "name": "destination_path",
            "required": false,
            "type": "string",
            "description": "The URL address when inject a file into the virtualised compute resource. The content shall comply with IETF RFC 3986 [8]."
          },
          {
            "name": "source_path",
            "required": false,
            "type": "string",
            "description": "The URL to a file contained in the VNF package used to customize a virtualised compute resource. The content shall comply with IETF RFC 3986 [8]."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.IpAllocationPool",
        "derived_from": "tosca.datatypes.Root",
        "description": "Specifies a range of IP addresses",
        "properties": [
          {
            "name": "start_ip_address",
            "required": true,
            "type": "string",
            "description": "The IP address to be used as the first one in a pool of addresses derived from the cidr block full IP range"
          },
          {
            "name": "end_ip_address",
            "required": true,
            "type": "string",
            "description": "The IP address to be used as the last one in a pool of addresses derived from the cidr block full IP range"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfTerminateOperationConfiguration",
        "derived_from": "tosca.datatypes.Root",
        "description": "represents information that affect the invocation of the TerminateVnf",
        "properties": [
          {
            "name": "min_graceful_termination_timeout",
            "required": true,
            "type": "scalar-unit.time",
            "description": "Minimum timeout value for graceful termination of a VNF instance"
          },
          {
            "name": "max_recommended_graceful_termination_timeout",
            "required": false,
            "type": "scalar-unit.time",
            "description": "Maximum recommended timeout value that can be needed to gracefully terminate a VNF instance of a particular type under certain conditions, such as maximum load condition. This is provided by VNF provider as information for the operator facilitating the selection of optimal timeout value. This value is not used as constraint"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VduProfile",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes additional instantiation data for a given Vdu.Compute used in a specific deployment flavour.",
        "properties": [
          {
            "name": "max_number_of_instances",
            "required": true,
            "type": "integer",
            "description": "Maximum number of instances of the VNFC based on this Vdu.Compute that is permitted to exist for a particular VNF deployment flavour.",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": 0
              }
            ]
          },
          {
            "name": "min_number_of_instances",
            "required": true,
            "type": "integer",
            "description": "Minimum number of instances of the VNFC based on this Vdu.Compute that is permitted to exist for a particular VNF deployment flavour.",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": 0
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfInstantiateOperationConfiguration",
        "derived_from": "tosca.datatypes.Root",
        "description": "represents information that affect the invocation of the InstantiateVnf operation."
      },
      {
        "name": "tosca.datatypes.nfv.VirtualCpuPinning",
        "derived_from": "tosca.datatypes.Root",
        "description": "Supports the specification of requirements related to the virtual CPU pinning configuration of a virtual compute resource",
        "properties": [
          {
            "name": "virtual_cpu_pinning_policy",
            "required": false,
            "type": "string",
            "description": "Indicates the policy for CPU pinning. The policy can take values of \"static\" or \"dynamic\". In case of \"dynamic\" the allocation of virtual CPU cores to logical CPU cores is decided by the VIM. (e.g. SMT (Simultaneous Multi-Threading) requirements). In case of \"static\" the allocation is requested to be according to the virtual_cpu_pinning_rule.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "static",
                  "dynamic"
                ]
              }
            ]
          },
          {
            "name": "virtual_cpu_pinning_rule",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "list",
            "description": "Provides the list of rules for allocating virtual CPU cores to logical  CPU cores/threads"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfcMonitoringParameter",
        "derived_from": "tosca.datatypes.Root",
        "description": "Represents information on virtualised resource related performance metrics applicable to the VNF.",
        "properties": [
          {
            "name": "collection_period",
            "required": false,
            "type": "scalar-unit.time",
            "description": "Describes the  periodicity at which to collect the performance information.",
            "constraints": [
              {
                "operator": "greater_than",
                "value": "0 s"
              }
            ]
          },
          {
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Human readable name of the monitoring parameter"
          },
          {
            "name": "performance_metric",
            "required": true,
            "type": "string",
            "description": "Identifies a performance metric to be monitored, according to ETSI GS NFV-IFA 027.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "v_cpu_usage_mean_vnf",
                  "v_cpu_usage_peak_vnf",
                  "v_memory_usage_mean_vnf",
                  "v_memory_usage_peak_vnf",
                  "v_disk_usage_mean_vnf",
                  "v_disk_usage_peak_vnf",
                  "byte_incoming_vnf_int_cp",
                  "byte_outgoing_vnf_int_cp",
                  "packet_incoming_vnf_int_cp",
                  "packet_outgoing_vnf_int_cp",
                  "v_cpu_usage_mean",
                  "v_cpu_usage_peak",
                  "v_memory_usage_mean",
                  "v_memory_usage_peak",
                  "v_disk_usage_mean",
                  "v_disk_usage_peak",
                  "v_net_byte_incoming",
                  "v_net_byte_outgoing",
                  "v_net_packet_incoming",
                  "v_net_packet_outgoing",
                  "usage_mean_vStorage",
                  "usage_peak_vStorage"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfmInterfaceInfo",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes information enabling the VNF instance to access the NFV-MANO interfaces produced by the VNFM",
        "properties": [
          {
            "name": "credentials",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "map",
            "description": "Provides credential enabling access to the interface"
          },
          {
            "name": "interface_name",
            "required": true,
            "type": "string",
            "description": "Identifies an interface produced by the VNFM.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "vnf_lcm",
                  "vnf_pm",
                  "vnf_fm"
                ]
              }
            ]
          },
          {
            "name": "details",
            "required": false,
            "type": "tosca.datatypes.nfv.InterfaceDetails",
            "description": "Provide additional data to access the interface endpoint"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfPackageChangeComponentMapping",
        "derived_from": "tosca.datatypes.Root",
        "description": "A mapping between the identifier of a components or property in the source VNFD and the identifier of the corresponding component or property in the destination VNFD.",
        "properties": [
          {
            "name": "source_id",
            "required": true,
            "type": "string",
            "description": "Identifier of the component or property in the source VNFD."
          },
          {
            "name": "component_type",
            "required": true,
            "type": "string",
            "description": "The type of component or property. Possible values differentiate whether changes concern to some VNF component (e.g. VDU, internal VLD, etc.) or property (e.g. a Scaling Aspect, etc.).",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "vdu",
                  "cp",
                  "virtual_link",
                  "virtual_storage",
                  "deployment_flavour",
                  "instantiation_level",
                  "scaling_aspect"
                ]
              }
            ]
          },
          {
            "name": "destination_id",
            "required": true,
            "type": "string",
            "description": "Identifier of the component or property in the destination VNFD."
          },
          {
            "name": "description",
            "required": false,
            "type": "string",
            "description": "Human readable description of the component changes."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.KvpData",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes a set of key-value pairs information used to customize a virtualised compute resource at boot time by using only key-value pairs data.",
        "properties": [
          {
            "name": "data",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "map",
            "description": "A map of strings that contains a set of key-value pairs that describes the information for configuring the virtualised compute resource."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VirtualLinkBitrateLevel",
        "derived_from": "tosca.datatypes.Root",
        "description": "Describes bitrate requirements applicable to the virtual link instantiated from a particicular VnfVirtualLink",
        "properties": [
          {
            "name": "bitrate_requirements",
            "required": true,
            "type": "tosca.datatypes.nfv.LinkBitrateRequirements",
            "description": "Virtual link bitrate requirements for an instantiation level or bitrate delta for a scaling step"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.OauthServerInfo",
        "derived_from": "tosca.datatypes.Root",
        "description": "information to enable discovery of the authorization server"
      },
      {
        "name": "tosca.datatypes.nfv.RequestedAdditionalCapability",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes requested additional capability for a particular VDU",
        "properties": [
          {
            "name": "requested_additional_capability_name",
            "required": true,
            "type": "string",
            "description": "Identifies a requested additional capability for the VDU."
          },
          {
            "name": "min_requested_additional_capability_version",
            "required": false,
            "type": "string",
            "description": "Identifies the minimum version of the requested additional capability."
          },
          {
            "name": "support_mandatory",
            "required": true,
            "type": "boolean",
            "description": "Indicates whether the requested additional capability is mandatory for successful operation."
          },
          {
            "name": "target_performance_parameters",
            "entry_schema": {
              "type": "string"
            },
            "required": true,
            "type": "map",
            "description": "Identifies specific attributes, dependent on the requested additional capability type."
          },
          {
            "name": "preferred_requested_additional_capability_version",
            "required": false,
            "type": "string",
            "description": "Identifies the preferred version of the requested additional capability."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.L2ProtocolData",
        "derived_from": "tosca.datatypes.Root",
        "description": "describes L2 protocol data for a given virtual link used in a specific VNF deployment flavour.",
        "properties": [
          {
            "name": "vlan_transparent",
            "default": false,
            "required": true,
            "type": "boolean",
            "description": "Specifies whether to support VLAN transparency for this L2 protocol or not."
          },
          {
            "name": "segmentation_id",
            "required": false,
            "type": "string",
            "description": "Specifies a specific virtualised network segment, which depends on the network type. For e.g., VLAN ID for VLAN network type and tunnel ID for GRE/VXLAN network types"
          },
          {
            "name": "network_type",
            "required": false,
            "type": "string",
            "description": "Specifies the network type for this L2 protocol. The value may be overridden at run-time.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "flat",
                  "vlan",
                  "vxlan",
                  "gre"
                ]
              }
            ]
          },
          {
            "name": "name",
            "required": false,
            "type": "string",
            "description": "Identifies the network name associated with this L2 protocol."
          },
          {
            "name": "mtu",
            "required": false,
            "type": "integer",
            "description": "Specifies the maximum transmission unit (MTU) value for this L2 protocol.",
            "constraints": [
              {
                "operator": "greater_than",
                "value": 0
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfScaleToLevelOperationConfiguration",
        "derived_from": "tosca.datatypes.Root",
        "description": "represents information that affect the invocation of the ScaleVnfToLevel operation",
        "properties": [
          {
            "name": "arbitrary_target_levels_supported",
            "required": true,
            "type": "boolean",
            "description": "Signals whether scaling according to the parameter \"scaleInfo\" is supported by this VNF"
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VirtualLinkMonitoringParameter",
        "derived_from": "tosca.datatypes.Root",
        "description": "Represents information on virtualised resource related performance metrics applicable to the VNF.",
        "properties": [
          {
            "name": "collection_period",
            "required": false,
            "type": "scalar-unit.time",
            "description": "Describes the periodicity at which to collect the performance information.",
            "constraints": [
              {
                "operator": "greater_than",
                "value": "0 s"
              }
            ]
          },
          {
            "name": "name",
            "required": true,
            "type": "string",
            "description": "Human readable name of the monitoring parameter"
          },
          {
            "name": "performance_metric",
            "required": true,
            "type": "string",
            "description": "Identifies a performance metric to be monitored.",
            "constraints": [
              {
                "operator": "valid_values",
                "value": [
                  "byte_incoming",
                  "byte_outgoing",
                  "packet_incoming",
                  "packet_outgoing"
                ]
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfChangeExtConnectivityOperationConfiguration",
        "derived_from": "tosca.datatypes.Root",
        "description": "represents information that affect the invocation of the ChangeExtVnfConnectivity operation"
      },
      {
        "name": "tosca.datatypes.nfv.ScaleInfo",
        "derived_from": "tosca.datatypes.Root",
        "description": "Indicates for a given scaleAspect the corresponding scaleLevel",
        "properties": [
          {
            "name": "scale_level",
            "required": true,
            "type": "integer",
            "description": "The scale level for a particular aspect",
            "constraints": [
              {
                "operator": "greater_or_equal",
                "value": 0
              }
            ]
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfInfoModifiableAttributes",
        "derived_from": "tosca.datatypes.Root",
        "description": "Describes VNF-specific extension and metadata for a given VNF"
      },
      {
        "name": "tosca.datatypes.nfv.VnfChangeFlavourOperationConfiguration",
        "derived_from": "tosca.datatypes.Root",
        "description": "represents information that affect the invocation of the ChangeVnfFlavour operation"
      },
      {
        "name": "tosca.datatypes.nfv.UriComponents",
        "derived_from": "tosca.datatypes.Root",
        "description": "information used to build a URI that complies with IETF RFC 3986 [8].",
        "properties": [
          {
            "name": "fragment",
            "required": false,
            "type": "string",
            "description": "fragment component of a URI."
          },
          {
            "name": "path",
            "required": false,
            "type": "string",
            "description": "path component of a URI."
          },
          {
            "name": "scheme",
            "required": true,
            "type": "string",
            "description": "scheme component of a URI."
          },
          {
            "name": "authority",
            "required": false,
            "type": "tosca.datatypes.nfv.UriAuthority",
            "description": "Authority component of a URI"
          },
          {
            "name": "query",
            "required": false,
            "type": "string",
            "description": "query component of a URI."
          }
        ]
      },
      {
        "name": "tosca.datatypes.nfv.VnfcConfigurableProperties",
        "derived_from": "tosca.datatypes.Root",
        "description": "Defines the configurable properties of a VNFC"
      },
      {
        "name": "tosca.datatypes.nfv.VirtualCpu",
        "derived_from": "tosca.datatypes.Root",
        "description": "Supports the specification of requirements related to virtual CPU(s) of a virtual compute resource",
        "properties": [
          {
            "name": "virtual_cpu_clock",
            "required": false,
            "type": "scalar-unit.frequency",
            "description": "Minimum virtual CPU clock rate"
          },
          {
            "name": "virtual_cpu_oversubscription_policy",
            "required": false,
            "type": "string",
            "description": "CPU core oversubscription policy e.g. the relation of virtual CPU cores to physical CPU cores/threads."
          },
          {
            "name": "vdu_cpu_requirements",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "map",
            "description": "The hardware platform specific VDU CPU requirements. A map of strings that contains a set of key-value pairs describing VDU CPU specific hardware platform requirements."
          },
          {
            "name": "num_virtual_cpu",
            "required": true,
            "type": "integer",
            "description": "Number of virtual CPUs",
            "constraints": [
              {
                "operator": "greater_than",
                "value": 0
              }
            ]
          },
          {
            "name": "cpu_architecture",
            "required": false,
            "type": "string",
            "description": "CPU architecture type. Examples are x86, ARM"
          },
          {
            "name": "virtual_cpu_pinning",
            "required": false,
            "type": "tosca.datatypes.nfv.VirtualCpuPinning",
            "description": "The virtual CPU pinning configuration for the virtualised compute resource."
          }
        ]
      },
      {
        "name": "tosca.datatypes.network.PortInfo",
        "derived_from": "tosca.datatypes.Root",
        "description": "The PortInfo type is a complex TOSCA data type used to describe network port information.",
        "properties": [
          {
            "name": "network_id",
            "required": false,
            "type": "string",
            "description": "The unique ID for the network."
          },
          {
            "name": "port_name",
            "required": false,
            "type": "string",
            "description": "The logical network port name."
          },
          {
            "name": "port_id",
            "required": false,
            "type": "string",
            "description": "The unique ID for the network port generated by the network provider."
          },
          {
            "name": "addresses",
            "entry_schema": {
              "type": "string"
            },
            "required": false,
            "type": "list",
            "description": "The list of IP address(es) assigned to the port."
          },
          {
            "name": "mac_address",
            "required": false,
            "type": "string",
            "description": "The unique media access control address (MAC address) assigned to the port."
          }
        ]
      },
      {
        "name": "tosca.datatypes.TimeInterval",
        "derived_from": "tosca.datatypes.Root",
        "description": "The TimeInterval type is a complex TOSCA data Type used when describing a period of time using the YAML ISO 8601 format to declare the start and end times.",
        "properties": [
          {
            "name": "start_time",
            "required": true,
            "type": "timestamp"
          },
          {
            "name": "end_time",
            "required": true,
            "type": "timestamp"
          }
        ]
      },
      {
        "name": "tosca.datatypes.json",
        "derived_from": "string",
        "description": "The json type is a TOSCA data Type used to define a string that containst data in the JavaScript Object Notation (JSON) format."
      },
      {
        "name": "file",
        "derived_from": "string"
      }
    ]
  }
}
