#
# COPYRIGHT Ericsson 2024
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

openapi: 3.0.3
info:
  version: '2.0'
  title: Application Manager Onboarding Service

servers:
  - url: '{protocol}://{hostname}/{basePath}'
    variables:
      protocol:
        default: https
      hostname:
        default: ${INGRESS_HOST_ADDRESS}/vnfm/onboarding
      basePath:
        default: api/v2

tags:
  - name: PackagesV2
    description: Groups all the Package Management Operations.

paths:
  /packages:
    get:
      summary: V2Packages_GET
      tags:
        - PackagesV2
      parameters:
        - name: filter
          description: |
            Attribute-based filtering. The Onboarding shall support receiving this parameter
            as part of the URI query string. The VNFM/OSS may supply this parameter. All
            attribute names that appear in the AppPackageQuery and in data types referenced
            from it shall be supported by the Onboarding in the filter expression
          in: query
          required: false
          schema:
            type: string
        - name: verbosity
          description: |
            Verbosity level for response output. When this parameter provided Onboarding will
            respond only with those fields which are specific for supplied verbosity level
          in: query
          required: false
          schema:
            type: string
            enum: [ui, default]
        - name: nextpage_opaque_marker
          description: |
            Marker to obtain the page number of a paged response.
          in: query
          required: false
          schema:
            type: string
        - name: size
          description: |
            The number of items per page. The default value is 15. Should be a positive number no greater than 100.
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                type: object
                title: AppPackageListV2
                properties:
                  packages:
                    type: array
                    items:
                      $ref: '#/components/schemas/AppPackageResponseV2'
          headers:
            Link:
              description: >
                Reference to other resources. Used for paging in the present
                document.
              schema:
                type: string
                maximum: 1
                minimum: 0
            PaginationInfo:
              description: >
                Page information of result set, includes
                  number - the returned page number
                  size - the number of results returned in the page
                  totalPages - the total number of pages for the query
                  totalElements - the total number of elements for the query
              schema:
                type: string
                maximum: 1
                minimum: 0
  '/packages/{id}':
    get:
      tags:
        - PackagesV2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          description: 'The Id of the package'
      responses:
        '200':
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPackageResponseV2'
        '400':
          description: BAD REQUEST
        '404':
          description: PACKAGE NOT FOUND
        '500':
          description: INTERNAL SERVER ERROR

components:
  schemas:
    OperationDetailResponse:
      description: Operation Detail response for package
      type: object
      title: OperationDetailResponse
      properties:
        operationName:
          type: string
        supported:
          type: boolean
        error:
          type: string
    ProblemDetails:
      description: >
        The definition of the general "ProblemDetails" data structure from
        IETF RFC 7807 [19] is reproduced in this structure. Compared to
        the general framework defined in IETF RFC 7807 [19], the "status"
        and "detail" attributes are mandated to be included by the present
        document, to ensure that the response contains additional textual
        information about an error. IETF RFC 7807 [19] foresees
        extensibility of the "ProblemDetails" type. It is possible that
        particular APIs in the present document, or particular
        implementations, define extensions to define additional attributes
        that provide more information about the error. The description
        column only provides some explanation of the meaning to Facilitate
        understanding of the design. For a full description, see IETF RFC
        7807 [19].
      type: object
      required:
        - status
        - detail
      properties:
        type:
          description: >
            A URI reference according to IETF RFC 3986 [5] that identifies
            the problem type. It is encouraged that the URI provides
            human-readable documentation for the problem (e.g. using HTML)
            when dereferenced. When this member is not present, its value
            is assumed to be "about:blank".
          type: string
          format: URI
        title:
          description: >
            A short, human-readable summary of the problem type. It should
            not change from occurrence to occurrence of the problem,
            except for purposes of localization. If type is given and
            other than "about:blank", this attribute shall also be
            provided. A short, human-readable summary of the problem
            type.  It SHOULD NOT change from occurrence to occurrence of
            the problem, except for purposes of localization (e.g., using
            proactive content negotiation; see [RFC7231], Section 3.4).
          type: string
        status:
          description: >
            The HTTP status code for this occurrence of the problem. The
            HTTP status code ([RFC7231], Section 6) generated by the
            origin server for this occurrence of the problem.
          type: integer
        detail:
          description: >
            A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: >
            A URI reference that identifies the specific occurrence of the
            problem. It may yield further information if dereferenced.
          type: string
          format: URI
    HelmPackage:
      type: object
      properties:
        chartUrl:
          description: |
            The URL to the chart.
          type: string
        chartName:
          description: |
            The name of the chart.
          type: string
        chartVersion:
          description: |
            The version of the chart.
          type: string
        chartType:
          description: |
            The type of the chart.
          type: string
          enum:
            - CRD
            - CNF
        priority:
          description: |
            The order in which the charts will be installed in order of ascendency.
          type: integer
        chartArtifactKey:
          description: |
            The artifact key of the chart.
          type: string
    AppPackageResponseV2:
      properties:
        appPkgId:
          description: |
            Id of the app package.
          type: string
        appDescriptorId:
          description: >
            The app descriptor id
          type: string
        appProvider:
          description: >
            The app provider
          type: string
        appProductName:
          description: |
            The application product name.
          type: string
        appSoftwareVersion:
          description: >
            The application software version
          type: string
        descriptorVersion:
          description: >
            The descriptor version
          type: string
        descriptorModel:
          description: |
            The descriptor model
          type: object
        helmPackageUrls:
          description: |
            The list of helm package urls
          type: array
          items:
            $ref: '#/components/schemas/HelmPackage'
        imagesURL:
          description: |
            The URL to the images.
          type: array
          items:
            type: object
        packageFiles:
          description: |
            List of package files
          type: array
          items:
            type: object
        onboardingState:
          description: >
            The onboarding state.
          type: string
        usageState:
          description: |
            The Usage state for the package.
          type: string
          enum:
            - NOT_IN_USE
            - IN_USE
        operationalState:
          type: string
          description: |
            The operational state of the package.
          enum:
            - ENABLED
            - DISABLED
        packageSecurityOption:
          type: string
          description: |
            The signature type of the package.
          enum:
            - OPTION_1
            - OPTION_2
            - UNSIGNED
        serviceModelId:
          description: >
            Contains the Id of the service model if package has been uploaded to Tosca-O service.
          type: string
        supportedOperations:
          type: array
          items:
            $ref: '#/components/schemas/OperationDetailResponse'
        onboardingFailureDetails:
          description: Onboarding failure details
          $ref: '#/components/schemas/ProblemDetails'
