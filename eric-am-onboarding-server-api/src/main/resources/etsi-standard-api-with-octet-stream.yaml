#
# COPYRIGHT Ericsson 2024
#
#
#
# The copyright to the computer program(s) herein is the property of
#
# Ericsson Inc. The programs may be used and/or copied only with written
#
# permission from Ericsson Inc. or in accordance with the terms and
#
# conditions stipulated in the agreement/contract under which the
#
# program(s) have been supplied.
#

openapi: 3.0.3
info:
  version: '1.0.0'
  title: EVNFM VNF Package Management Interface /v1 with octet-stream

servers:
  - url: '{protocol}://{hostname}/{basePath}'
    variables:
      protocol:
        default: https
      hostname:
        default: ${INGRESS_HOST_ADDRESS}/vnfm/onboarding
      basePath:
        default: api/vnfpkgm/v1

tags:
  - name: VNF Packages Octet Stream

paths:
  '/vnf_packages/{vnfPkgId}/package_content':
    parameters:
      - name: vnfPkgId
        description: >
          Identifier of the on-boarded VNF package.
        in: path
        required: true
        schema:
          type: string
      - name: Content-Length
        description: represent length of the content
        in: header
        required: true
        schema:
          type: long
    put:
      tags:
        - VNF Packages Octet Stream
      summary: Use this PUT method to upload the content of a VNF package.
      operationId: vnfPackagesVnfPkgIdPackageContentPut
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              $ref: 'InputStreamResource'
      responses:
        '202':
          $ref: '#/components/responses/Accepted'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '405':
          $ref: '#/components/responses/MethodNotAllowed'
        '406':
          $ref: '#/components/responses/NotAcceptable'
        '409':
          $ref: '#/components/responses/Conflict'
        '419':
          $ref: '#/components/responses/InsufficientSpaceOnResource'
        '500':
          $ref: '#/components/responses/InternalServerError'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
components:
  schemas:
    ProblemDetails:
      description: >
        Data structure that carry machine-readable details of errors in a HTTP response
      type: object
      required:
        - status
        - detail
      properties:
        type:
          description: >
            A URI reference that identifies the problem type. It is encouraged that the URI provides
            human-readable documentation for the problem (e.g. using HTML)
            when de-referenced. When this member is not present, its value
            is assumed to be "about:blank".
          type: string
          format: URI
        title:
          description: >
            A short, human-readable summary of the problem type. It does not change from occurrence to occurrence of the problem, except for 
            purposes of localization (for example, using proactive content negotiation). If type is given and other than about:blank, this 
            attribute is also provided.
          type: string
        status:
          description: >
            The HTTP status code for this occurrence of the problem. The HTTP status code generated by the origin server for this occurrence of 
            the problem.
          type: integer
        detail:
          description: >
            A human-readable explanation specific to this occurrence of
            the problem.
          type: string
        instance:
          description: >
            A URI reference that identifies the specific occurrence of the
            problem. It may yield further information if de-referenced.
          type: string
          format: URI
  responses:
    BadRequest:
      description: |
        BAD REQUEST – The API responds with this code in the following cases:
        The cause has to be properly specified in the ProblemDetails structure that is returned.

        If the request is malformed or syntactically incorrect (for example, if the request URI contains incorrect query parameters or the payload 
        body contains a syntactically incorrect data structure).The ProblemDetails structure is provided, and includes in the detail attribute more
        information about the source of the problem.

        If the response to a GET request which queries a container resource would be so large that the performance of the API producer is adversely
        affected, and the API producer does not support paging for the affected resource. The ProblemDetails structure is provided, and includes in
        the detail attribute more information about the source of the problem.

        If there is an application error related to the client's input that cannot be easily mapped to any other HTTP response 
        code (a catch-all error).The ProblemDetails structure is provided, and includes in the detail attribute more information about 
        the source of the problem.

        If the request contains a malformed access token.
        The details of the error are returned in the WWW Authenticate HTTP header.
        The ProblemDetails structure may be provided.

        The use of this HTTP error response code is applicable to the use of the OAuth 2.0 for the authorization of API requests and notifications.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Unauthorized:
      description: |
        UNAUTHORIZED – If the request contains no access token even though one is required, or if the request contains an authorization token that is
        invalid (for example, expired or revoked), the API producer responds with this response.The details of the error are returned 
        in the WWW-Authenticate HTTP header. The ProblemDetails structure may be provided.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Forbidden:
      description: |
        FORBIDDEN – If the API consumer is not allowed to perform a particular request to a particular resource, the API producer responds with this
        response code. The ProblemDetails structure is provided. It includes in the detail attribute information about the source of the problem, 
        and may indicate how to solve it.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotFound:
      description: |
        NOT FOUND – If the API producer did not find a current representation for the resource addressed by the URI passed 
        in the request or is not willing to disclose that one exists, it responds with this response code. The ProblemDetails structure may be 
        provided, including in the detail attribute information about the source of the problem, for example, a wrong resource URI variable.
        This response code is not appropriate if the resource addressed by the URI is a container resource, which is designed to contain child 
        resources, but does not contain any child resource at the time the request is received. For a GET request to an existing empty container 
        resource, a typical response contains a 200 OK response code and a payload body with an empty array.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    MethodNotAllowed:
      description: |
        METHOD NOT ALLOWED – The API producer returns this response code in the following scenarios:

        If a particular HTTP method is not supported for a particular resource, 
        the API producer responds with this response code. The ProblemDetails structure may be omitted.

        If there is no valid EVNFM license present in NeLS. The ProblemDetails structure is provided, and includes in the detail attribute more 
        information about the source of the problem.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    NotAcceptable:
      description: |
        NOT ACCEPTABLE – If the Accept header does not contain at least one name of a content type that is acceptable to the API producer,
        the API producer responds with this response code. The ProblemDetails structure may be omitted.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Conflict:
      description: |
        CONFLICT - Another request is in progress that prohibits the fulfilment of the
        current request, or the current resource state is inconsistent with
        the request.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    InternalServerError:
      description: |
        INTERNAL SERVER ERROR – If there is an application error not related to the client's input that cannot be easily mapped to any other HTTP 
        response code (a catch-all error), the API producer responds with this response code. The ProblemDetails structure is provided, and 
        includes in the detail attribute more information about the source of the problem.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    ServiceUnavailable:
      description: |
        SERVICE UNAVAILABLE – If the API producer encounters an internal overload situation of itself or of a system it relies on, it responds 
        with this response code, following the provisions in for the use of the Retry-After HTTP header and for the alternative to refuse the 
        connection. The ProblemDetails structure can be omitted.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    Accepted:
      description: |
        ACCEPTED - The VNF package was accepted for uploading, but the processing has
        not been completed. It is expected to take some time for processing.
        The response body shall be empty.
    InsufficientSpaceOnResource:
      description: |
        Insufficient Space On Resource  – If there is no space available for package upload, the API producer responds with
        this response code. The ProblemDetails structure is provided, including in the detail attribute information
        about the source of the problem.
      headers:
        Content-Type:
          description: The MIME type of the body of the response.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'